from random import *
from time import time as timer
from pygame import *
class Game_sprite(sprite.Sprite):
    def __init__ (self, img, x, y, w, h, speed):
        super().__init__()
        self.image = transform.scale(image.load(img), (w, h))
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y
        self.speed = speed
    def reset(self):
        win.blit(self.image, (self.rect.x, self.rect.y))
class Player(Game_sprite):
    def right(self):
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y >10:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y <win_h - 90:
            self.rect.y += self.speed
    def left(self):
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y >10:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.y <win_h - 90:
            self.rect.y += self.speed

platform1 = Player('square.png' , 30,250, 90,90, 15)
platform2 = Player('square.png' , 700,250, 90,90, 15)


font.init()
font1 = font.Font(None,55)
text1 = font1.render('Левый проиграл',1,(255,255,244))
text2 = font1.render('Правый проиграл',1,(255,255,244))

speed_x = 5
speed_y = 5



ball = Game_sprite('logo_Slime.png',200,100,50,50,10)

back = (234,34,23)
win_h = 400
win_w = 800
win = display.set_mode((win_w,win_h))

game = True
finish = False

clock = time.Clock()
while game:

    for e in event.get():
        if e.type == QUIT:
            game = False

    if finish != True:
        win.fill(back)
        ball.reset()
        ball.rect.x += speed_x
        ball.rect.y += speed_y
        if sprite.collide_rect(platform1,ball) or sprite.collide_rect(platform2,ball):
            speed_x *= -1
        if ball.rect.y > win_h or ball.rect.y<0:
            speed_y *= -1

        if ball.rect.x < 0:
            finish = True
            win.blit(text1,(250,200))
        if ball.rect.x > win_w:
            finish = True
            win.blit(text2,(250,200))
    
        platform1.reset()
        platform2.reset()
        platform1.left()
        platform2.right()
        display.update()
        clock.tick(60)
